<?php
namespace Composer\Autoload; class ClassLoader { private $prefixLengthsPsr4 = array(); private $prefixDirsPsr4 = array(); private $fallbackDirsPsr4 = array(); private $prefixesPsr0 = array(); private $fallbackDirsPsr0 = array(); private $useIncludePath = false; private $classMap = array(); private $classMapAuthoritative = false; public function getPrefixes() { if (!empty($this->prefixesPsr0)) { return call_user_func_array('array_merge', $this->prefixesPsr0); } return array(); } public function getPrefixesPsr4() { return $this->prefixDirsPsr4; } public function getFallbackDirs() { return $this->fallbackDirsPsr0; } public function getFallbackDirsPsr4() { return $this->fallbackDirsPsr4; } public function getClassMap() { return $this->classMap; } public function addClassMap(array $sp046905) { if ($this->classMap) { $this->classMap = array_merge($this->classMap, $sp046905); } else { $this->classMap = $sp046905; } } public function add($sp0f6b81, $sp8035db, $sp73aaa1 = false) { if (!$sp0f6b81) { if ($sp73aaa1) { $this->fallbackDirsPsr0 = array_merge((array) $sp8035db, $this->fallbackDirsPsr0); } else { $this->fallbackDirsPsr0 = array_merge($this->fallbackDirsPsr0, (array) $sp8035db); } return; } $sp6d59a2 = $sp0f6b81[0]; if (!isset($this->prefixesPsr0[$sp6d59a2][$sp0f6b81])) { $this->prefixesPsr0[$sp6d59a2][$sp0f6b81] = (array) $sp8035db; return; } if ($sp73aaa1) { $this->prefixesPsr0[$sp6d59a2][$sp0f6b81] = array_merge((array) $sp8035db, $this->prefixesPsr0[$sp6d59a2][$sp0f6b81]); } else { $this->prefixesPsr0[$sp6d59a2][$sp0f6b81] = array_merge($this->prefixesPsr0[$sp6d59a2][$sp0f6b81], (array) $sp8035db); } } public function addPsr4($sp0f6b81, $sp8035db, $sp73aaa1 = false) { if (!$sp0f6b81) { if ($sp73aaa1) { $this->fallbackDirsPsr4 = array_merge((array) $sp8035db, $this->fallbackDirsPsr4); } else { $this->fallbackDirsPsr4 = array_merge($this->fallbackDirsPsr4, (array) $sp8035db); } } elseif (!isset($this->prefixDirsPsr4[$sp0f6b81])) { $spfbb891 = strlen($sp0f6b81); if ('\\' !== $sp0f6b81[$spfbb891 - 1]) { throw new \InvalidArgumentException('A non-empty PSR-4 prefix must end with a namespace separator.'); } $this->prefixLengthsPsr4[$sp0f6b81[0]][$sp0f6b81] = $spfbb891; $this->prefixDirsPsr4[$sp0f6b81] = (array) $sp8035db; } elseif ($sp73aaa1) { $this->prefixDirsPsr4[$sp0f6b81] = array_merge((array) $sp8035db, $this->prefixDirsPsr4[$sp0f6b81]); } else { $this->prefixDirsPsr4[$sp0f6b81] = array_merge($this->prefixDirsPsr4[$sp0f6b81], (array) $sp8035db); } } public function set($sp0f6b81, $sp8035db) { if (!$sp0f6b81) { $this->fallbackDirsPsr0 = (array) $sp8035db; } else { $this->prefixesPsr0[$sp0f6b81[0]][$sp0f6b81] = (array) $sp8035db; } } public function setPsr4($sp0f6b81, $sp8035db) { if (!$sp0f6b81) { $this->fallbackDirsPsr4 = (array) $sp8035db; } else { $spfbb891 = strlen($sp0f6b81); if ('\\' !== $sp0f6b81[$spfbb891 - 1]) { throw new \InvalidArgumentException('A non-empty PSR-4 prefix must end with a namespace separator.'); } $this->prefixLengthsPsr4[$sp0f6b81[0]][$sp0f6b81] = $spfbb891; $this->prefixDirsPsr4[$sp0f6b81] = (array) $sp8035db; } } public function setUseIncludePath($sp39f708) { $this->useIncludePath = $sp39f708; } public function getUseIncludePath() { return $this->useIncludePath; } public function setClassMapAuthoritative($sp500783) { $this->classMapAuthoritative = $sp500783; } public function isClassMapAuthoritative() { return $this->classMapAuthoritative; } public function register($sp73aaa1 = false) { spl_autoload_register(array($this, 'loadClass'), true, $sp73aaa1); } public function unregister() { spl_autoload_unregister(array($this, 'loadClass')); } public function loadClass($spda326a) { if ($sp6b4670 = $this->findFile($spda326a)) { includeFile($sp6b4670); return true; } } public function findFile($spda326a) { if ('\\' == $spda326a[0]) { $spda326a = substr($spda326a, 1); } if (isset($this->classMap[$spda326a])) { return $this->classMap[$spda326a]; } if ($this->classMapAuthoritative) { return false; } $sp6b4670 = $this->spd9b9bc($spda326a, '.php'); if ($sp6b4670 === null && defined('HHVM_VERSION')) { $sp6b4670 = $this->spd9b9bc($spda326a, '.hh'); } if ($sp6b4670 === null) { return $this->classMap[$spda326a] = false; } return $sp6b4670; } private function spd9b9bc($spda326a, $spd92396) { $sp34a820 = strtr($spda326a, '\\', DIRECTORY_SEPARATOR) . $spd92396; $sp6d59a2 = $spda326a[0]; if (isset($this->prefixLengthsPsr4[$sp6d59a2])) { foreach ($this->prefixLengthsPsr4[$sp6d59a2] as $sp0f6b81 => $spfbb891) { if (0 === strpos($spda326a, $sp0f6b81)) { foreach ($this->prefixDirsPsr4[$sp0f6b81] as $sp095be8) { if (file_exists($sp6b4670 = $sp095be8 . DIRECTORY_SEPARATOR . substr($sp34a820, $spfbb891))) { return $sp6b4670; } } } } } foreach ($this->fallbackDirsPsr4 as $sp095be8) { if (file_exists($sp6b4670 = $sp095be8 . DIRECTORY_SEPARATOR . $sp34a820)) { return $sp6b4670; } } if (false !== ($sp64cbd4 = strrpos($spda326a, '\\'))) { $sp251826 = substr($sp34a820, 0, $sp64cbd4 + 1) . strtr(substr($sp34a820, $sp64cbd4 + 1), '_', DIRECTORY_SEPARATOR); } else { $sp251826 = strtr($spda326a, '_', DIRECTORY_SEPARATOR) . $spd92396; } if (isset($this->prefixesPsr0[$sp6d59a2])) { foreach ($this->prefixesPsr0[$sp6d59a2] as $sp0f6b81 => $sp5005e4) { if (0 === strpos($spda326a, $sp0f6b81)) { foreach ($sp5005e4 as $sp095be8) { if (file_exists($sp6b4670 = $sp095be8 . DIRECTORY_SEPARATOR . $sp251826)) { return $sp6b4670; } } } } } foreach ($this->fallbackDirsPsr0 as $sp095be8) { if (file_exists($sp6b4670 = $sp095be8 . DIRECTORY_SEPARATOR . $sp251826)) { return $sp6b4670; } } if ($this->useIncludePath && ($sp6b4670 = stream_resolve_include_path($sp251826))) { return $sp6b4670; } } } function includeFile($sp6b4670) { include $sp6b4670; }