<?php
namespace PHPMailer\PHPMailer; use League\OAuth2\Client\Grant\RefreshToken; use League\OAuth2\Client\Provider\AbstractProvider; use League\OAuth2\Client\Token\AccessToken; class OAuth { protected $provider; protected $oauthToken; protected $oauthUserEmail = ''; protected $oauthClientSecret = ''; protected $oauthClientId = ''; protected $oauthRefreshToken = ''; public function __construct($spb86d46) { $this->provider = $spb86d46['provider']; $this->oauthUserEmail = $spb86d46['userName']; $this->oauthClientSecret = $spb86d46['clientSecret']; $this->oauthClientId = $spb86d46['clientId']; $this->oauthRefreshToken = $spb86d46['refreshToken']; } protected function getGrant() { return new RefreshToken(); } protected function getToken() { return $this->provider->getAccessToken($this->getGrant(), array('refresh_token' => $this->oauthRefreshToken)); } public function getOauth64() { if (null === $this->oauthToken or $this->oauthToken->hasExpired()) { $this->oauthToken = $this->getToken(); } return base64_encode('user=' . $this->oauthUserEmail . 'auth=Bearer ' . $this->oauthToken . ''); } }