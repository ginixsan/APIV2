<?php
require_once 'vendor/autoload.php'; require_once __DIR__ . '/../flight/autoload.php'; class RouterTest extends PHPUnit_Framework_TestCase { private $router; private $request; private $dispatcher; function setUp() { $this->router = new \flight\net\Router(); $this->request = new \flight\net\Request(); $this->dispatcher = new \flight\core\Dispatcher(); } function ok() { echo 'OK'; } function check($sp059473 = '') { $this->routeRequest(); $this->expectOutputString($sp059473); } function routeRequest() { $sp6832e3 = false; while ($spbea047 = $this->router->route($this->request)) { $spfbee46 = array_values($spbea047->params); if ($spbea047->pass) { $spfbee46[] = $spbea047; } $spa3a361 = $this->dispatcher->execute($spbea047->callback, $spfbee46); $sp6832e3 = true; if (!$spa3a361) { break; } $this->router->next(); $sp6832e3 = false; } if (!$sp6832e3) { echo '404'; } } function testDefaultRoute() { $this->router->map('/', array($this, 'ok')); $this->request->url = '/'; $this->check('OK'); } function testPathRoute() { $this->router->map('/path', array($this, 'ok')); $this->request->url = '/path'; $this->check('OK'); } function testPostRoute() { $this->router->map('POST /', array($this, 'ok')); $this->request->url = '/'; $this->request->method = 'POST'; $this->check('OK'); } function testGetPostRoute() { $this->router->map('GET|POST /', array($this, 'ok')); $this->request->url = '/'; $this->request->method = 'GET'; $this->check('OK'); } function testRegEx() { $this->router->map('/num/[0-9]+', array($this, 'ok')); $this->request->url = '/num/1234'; $this->check('OK'); } function testUrlParameters() { $this->router->map('/user/@id', function ($sp8d658e) { echo $sp8d658e; }); $this->request->url = '/user/123'; $this->check('123'); } function testRegExParameters() { $this->router->map('/test/@name:[a-z]+', function ($spbc60b1) { echo $spbc60b1; }); $this->request->url = '/test/abc'; $this->check('abc'); } function testOptionalParameters() { $this->router->map('/blog(/@year(/@month(/@day)))', function ($sp46b38a, $spc14802, $spad1716) { echo "{$sp46b38a},{$spc14802},{$spad1716}"; }); $this->request->url = '/blog/2000'; $this->check('2000,,'); } function testRegexOptionalParameters() { $this->router->map('/@controller/@method(/@id:[0-9]+)', function ($spab67ca, $sp70c3ee, $sp8d658e) { echo "{$spab67ca},{$sp70c3ee},{$sp8d658e}"; }); $this->request->url = '/user/delete/123'; $this->check('user,delete,123'); } function testRegexEmptyOptionalParameters() { $this->router->map('/@controller/@method(/@id:[0-9]+)', function ($spab67ca, $sp70c3ee, $sp8d658e) { echo "{$spab67ca},{$sp70c3ee},{$sp8d658e}"; }); $this->request->url = '/user/delete/'; $this->check('user,delete,'); } function testWildcard() { $this->router->map('/account/*', array($this, 'ok')); $this->request->url = '/account/123/abc/xyz'; $this->check('OK'); } function testRouteObjectPassing() { $this->router->map('/yes_route', function ($spbea047) { $this->assertTrue(is_object($spbea047)); $this->assertTrue(is_array($spbea047->methods)); $this->assertTrue(is_array($spbea047->params)); $this->assertEquals(sizeof($spbea047->params), 0); $this->assertEquals($spbea047->regex, null); $this->assertEquals($spbea047->splat, ''); $this->assertTrue($spbea047->pass); }, true); $this->request->url = '/yes_route'; $this->check(); $this->router->map('/no_route', function ($spbea047 = null) { $this->assertTrue(is_null($spbea047)); }, false); $this->request->url = '/no_route'; $this->check(); } function testRouteWithParameters() { $this->router->map('/@one/@two', function ($sp9c5318, $spc3e3b0, $spbea047) { $this->assertEquals(sizeof($spbea047->params), 2); $this->assertEquals($spbea047->params['one'], $sp9c5318); $this->assertEquals($spbea047->params['two'], $spc3e3b0); }, true); $this->request->url = '/1/2'; $this->check(); } function testSplatWildcard() { $this->router->map('/account/*', function ($spbea047) { echo $spbea047->splat; }, true); $this->request->url = '/account/456/def/xyz'; $this->check('456/def/xyz'); } function testSplatWildcardTrailingSlash() { $this->router->map('/account/*', function ($spbea047) { echo $spbea047->splat; }, true); $this->request->url = '/account'; $this->check(); } function testSplatNamedPlusWildcard() { $this->router->map('/account/@name/*', function ($spbc60b1, $spbea047) { echo $spbea047->splat; $this->assertEquals('abc', $spbc60b1); }, true); $this->request->url = '/account/abc/456/def/xyz'; $this->check('456/def/xyz'); } function testNotFound() { $this->router->map('/does_exist', array($this, 'ok')); $this->request->url = '/does_not_exist'; $this->check('404'); } function testCaseSensitivity() { $this->router->map('/hello', array($this, 'ok')); $this->request->url = '/HELLO'; $this->router->case_sensitive = true; $this->check('404'); } }