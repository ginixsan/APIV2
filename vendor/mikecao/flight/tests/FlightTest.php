<?php
require_once 'vendor/autoload.php'; require_once __DIR__ . '/../flight/Flight.php'; class FlightTest extends PHPUnit_Framework_TestCase { function setUp() { Flight::init(); } function testDefaultComponents() { $spc73b8e = Flight::request(); $spf36e4d = Flight::response(); $sp9914e5 = Flight::router(); $spb77f2c = Flight::view(); $this->assertEquals('flight\\net\\Request', get_class($spc73b8e)); $this->assertEquals('flight\\net\\Response', get_class($spf36e4d)); $this->assertEquals('flight\\net\\Router', get_class($sp9914e5)); $this->assertEquals('flight\\template\\View', get_class($spb77f2c)); } function testGetAndSet() { Flight::set('a', 1); $sp87f84e = Flight::get('a'); $this->assertEquals(1, $sp87f84e); Flight::clear(); $sp89a07c = Flight::get(); $this->assertEquals(0, count($sp89a07c)); Flight::set('a', 1); Flight::set('b', 2); $sp89a07c = Flight::get(); $this->assertEquals(2, count($sp89a07c)); $this->assertEquals(1, $sp89a07c['a']); $this->assertEquals(2, $sp89a07c['b']); } function testRegister() { Flight::path(__DIR__ . '/classes'); Flight::register('user', 'User'); $sp4de544 = Flight::user(); $sp41784e = spl_autoload_functions(); $this->assertTrue(sizeof($sp41784e) > 0); $this->assertTrue(is_object($sp4de544)); $this->assertEquals('User', get_class($sp4de544)); } function testMap() { Flight::map('map1', function () { return 'hello'; }); $sp38622e = Flight::map1(); $this->assertEquals('hello', $sp38622e); } function testUnmapped() { $this->setExpectedException('Exception', 'doesNotExist must be a mapped method.'); Flight::doesNotExist(); } }