<?php
require_once 'vendor/autoload.php'; require_once __DIR__ . '/../flight/autoload.php'; require_once __DIR__ . '/classes/User.php'; class RegisterTest extends PHPUnit_Framework_TestCase { private $app; function setUp() { $this->app = new \flight\Engine(); } function testRegister() { $this->app->register('reg1', 'User'); $sp4de544 = $this->app->reg1(); $this->assertTrue(is_object($sp4de544)); $this->assertEquals('User', get_class($sp4de544)); $this->assertEquals('', $sp4de544->name); } function testRegisterWithConstructor() { $this->app->register('reg2', 'User', array('Bob')); $sp4de544 = $this->app->reg2(); $this->assertTrue(is_object($sp4de544)); $this->assertEquals('User', get_class($sp4de544)); $this->assertEquals('Bob', $sp4de544->name); } function testRegisterWithInitialization() { $this->app->register('reg3', 'User', array('Bob'), function ($sp4de544) { $sp4de544->name = 'Fred'; }); $sp4de544 = $this->app->reg3(); $this->assertTrue(is_object($sp4de544)); $this->assertEquals('User', get_class($sp4de544)); $this->assertEquals('Fred', $sp4de544->name); } function testSharedInstance() { $this->app->register('reg4', 'User'); $sp774d1c = $this->app->reg4(); $sp754ebb = $this->app->reg4(); $spd40b9e = $this->app->reg4(false); $this->assertTrue($sp774d1c === $sp754ebb); $this->assertTrue($sp774d1c !== $spd40b9e); } function testMapOverridesRegister() { $this->app->register('reg5', 'User'); $sp4de544 = $this->app->reg5(); $this->assertTrue(is_object($sp4de544)); $this->app->map('reg5', function () { return 123; }); $sp4de544 = $this->app->reg5(); $this->assertEquals(123, $sp4de544); } }