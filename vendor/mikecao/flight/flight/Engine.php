<?php
namespace flight; use flight\core\Loader; use flight\core\Dispatcher; class Engine { protected $vars; protected $loader; protected $dispatcher; public function __construct() { $this->vars = array(); $this->loader = new Loader(); $this->dispatcher = new Dispatcher(); $this->init(); } public function __call($spbc60b1, $spfbee46) { $spfed79e = $this->dispatcher->get($spbc60b1); if (is_callable($spfed79e)) { return $this->dispatcher->run($spbc60b1, $spfbee46); } if (!$this->loader->get($spbc60b1)) { throw new \Exception("{$spbc60b1} must be a mapped method."); } $sp294959 = !empty($spfbee46) ? (bool) $spfbee46[0] : true; return $this->loader->load($spbc60b1, $sp294959); } public function init() { static $spdb9052 = false; $sp7d4d14 = $this; if ($spdb9052) { $this->vars = array(); $this->loader->reset(); $this->dispatcher->reset(); } $this->loader->register('request', '\\flight\\net\\Request'); $this->loader->register('response', '\\flight\\net\\Response'); $this->loader->register('router', '\\flight\\net\\Router'); $this->loader->register('view', '\\flight\\template\\View', array(), function ($spb77f2c) use($sp7d4d14) { $spb77f2c->path = $sp7d4d14->get('flight.views.path'); $spb77f2c->extension = $sp7d4d14->get('flight.views.extension'); }); $sp1ca8e6 = array('start', 'stop', 'route', 'halt', 'error', 'notFound', 'render', 'redirect', 'etag', 'lastModified', 'json', 'jsonp'); foreach ($sp1ca8e6 as $spbc60b1) { $this->dispatcher->set($spbc60b1, array($this, '_' . $spbc60b1)); } $this->set('flight.base_url', null); $this->set('flight.case_sensitive', false); $this->set('flight.handle_errors', true); $this->set('flight.log_errors', false); $this->set('flight.views.path', './views'); $this->set('flight.views.extension', '.php'); $this->before('start', function () use($sp7d4d14) { if ($sp7d4d14->get('flight.handle_errors')) { set_error_handler(array($sp7d4d14, 'handleError')); set_exception_handler(array($sp7d4d14, 'handleException')); } $sp7d4d14->router()->case_sensitive = $sp7d4d14->get('flight.case_sensitive'); }); $spdb9052 = true; } public function handleError($sp07e88d, $spb588e6, $spa55934, $spe25d7d) { if ($sp07e88d & error_reporting()) { throw new \ErrorException($spb588e6, $sp07e88d, 0, $spa55934, $spe25d7d); } } public function handleException($sp8f120e) { if ($this->get('flight.log_errors')) { error_log($sp8f120e->getMessage()); } $this->error($sp8f120e); } public function map($spbc60b1, $spfed79e) { if (method_exists($this, $spbc60b1)) { throw new \Exception('Cannot override an existing framework method.'); } $this->dispatcher->set($spbc60b1, $spfed79e); } public function register($spbc60b1, $spda326a, array $spfbee46 = array(), $spfed79e = null) { if (method_exists($this, $spbc60b1)) { throw new \Exception('Cannot override an existing framework method.'); } $this->loader->register($spbc60b1, $spda326a, $spfbee46, $spfed79e); } public function before($spbc60b1, $spfed79e) { $this->dispatcher->hook($spbc60b1, 'before', $spfed79e); } public function after($spbc60b1, $spfed79e) { $this->dispatcher->hook($spbc60b1, 'after', $spfed79e); } public function get($spa6cb11 = null) { if ($spa6cb11 === null) { return $this->vars; } return isset($this->vars[$spa6cb11]) ? $this->vars[$spa6cb11] : null; } public function set($spa6cb11, $spc1f8c3 = null) { if (is_array($spa6cb11) || is_object($spa6cb11)) { foreach ($spa6cb11 as $sp027ae6 => $sp42824e) { $this->vars[$sp027ae6] = $sp42824e; } } else { $this->vars[$spa6cb11] = $spc1f8c3; } } public function has($spa6cb11) { return isset($this->vars[$spa6cb11]); } public function clear($spa6cb11 = null) { if (is_null($spa6cb11)) { $this->vars = array(); } else { unset($this->vars[$spa6cb11]); } } public function path($sp095be8) { $this->loader->addDirectory($sp095be8); } public function _start() { $sp6832e3 = false; $sp7d4d14 = $this; $spc73b8e = $this->request(); $spf36e4d = $this->response(); $sp9914e5 = $this->router(); $this->after('start', function () use($sp7d4d14) { $sp7d4d14->stop(); }); if (ob_get_length() > 0) { $spf36e4d->write(ob_get_clean()); } ob_start(); while ($spbea047 = $sp9914e5->route($spc73b8e)) { $spfbee46 = array_values($spbea047->params); if ($spbea047->pass) { $spfbee46[] = $spbea047; } $spa3a361 = $this->dispatcher->execute($spbea047->callback, $spfbee46); $sp6832e3 = true; if (!$spa3a361) { break; } $sp9914e5->next(); $sp6832e3 = false; } if (!$sp6832e3) { $this->notFound(); } } public function _stop($spa9cf2c = null) { $spf36e4d = $this->response(); if (!$spf36e4d->sent()) { if ($spa9cf2c !== null) { $spf36e4d->status($spa9cf2c); } $spf36e4d->write(ob_get_clean()); $spf36e4d->send(); } } public function _route($sp07e4f9, $spfed79e, $sp30ce80 = false) { $this->router()->map($sp07e4f9, $spfed79e, $sp30ce80); } public function _halt($spa9cf2c = 200, $spd76c7f = '') { $this->response()->status($spa9cf2c)->write($spd76c7f)->send(); } public function _error($sp8f120e) { $sp4fef11 = sprintf('<h1>500 Internal Server Error</h1>' . '<h3>%s (%s)</h3>' . '<pre>%s</pre>', $sp8f120e->getMessage(), $sp8f120e->getCode(), $sp8f120e->getTraceAsString()); try { $this->response()->clear()->status(500)->write($sp4fef11)->send(); } catch (\Throwable $sp2fc88c) { die($sp4fef11); } catch (\Exception $spbc899f) { die($sp4fef11); } } public function _notFound() { $this->response()->clear()->status(404)->write('<h1>404 Not Found</h1>' . '<h3>The page you have requested could not be found.</h3>' . str_repeat(' ', 512))->send(); } public function _redirect($sp00ca70, $spa9cf2c = 303) { $sp36644c = $this->get('flight.base_url'); if ($sp36644c === null) { $sp36644c = $this->request()->base; } if ($sp36644c != '/' && strpos($sp00ca70, '://') === false) { $sp00ca70 = $sp36644c . preg_replace('#/+#', '/', '/' . $sp00ca70); } $this->response()->clear()->status($spa9cf2c)->header('Location', $sp00ca70)->write($sp00ca70)->send(); } public function _render($sp6b4670, $sp0a1a6a = null, $spa6cb11 = null) { if ($spa6cb11 !== null) { $this->view()->set($spa6cb11, $this->view()->fetch($sp6b4670, $sp0a1a6a)); } else { $this->view()->render($sp6b4670, $sp0a1a6a); } } public function _json($sp0a1a6a, $spa9cf2c = 200, $spe7768d = true, $sp2fb0c9 = 'utf-8', $spad412e = 0) { $spc3f609 = $spe7768d ? json_encode($sp0a1a6a, $spad412e) : $sp0a1a6a; $this->response()->status($spa9cf2c)->header('Content-Type', 'application/json; charset=' . $sp2fb0c9)->write($spc3f609)->send(); } public function _jsonp($sp0a1a6a, $sp2eb7b7 = 'jsonp', $spa9cf2c = 200, $spe7768d = true, $sp2fb0c9 = 'utf-8', $spad412e = 0) { $spc3f609 = $spe7768d ? json_encode($sp0a1a6a, $spad412e) : $sp0a1a6a; $spfed79e = $this->request()->query[$sp2eb7b7]; $this->response()->status($spa9cf2c)->header('Content-Type', 'application/javascript; charset=' . $sp2fb0c9)->write($spfed79e . '(' . $spc3f609 . ');')->send(); } public function _etag($sp8d658e, $spb40563 = 'strong') { $sp8d658e = ($spb40563 === 'weak' ? 'W/' : '') . $sp8d658e; $this->response()->header('ETag', $sp8d658e); if (isset($_SERVER['HTTP_IF_NONE_MATCH']) && $_SERVER['HTTP_IF_NONE_MATCH'] === $sp8d658e) { $this->halt(304); } } public function _lastModified($sp4fd006) { $this->response()->header('Last-Modified', gmdate('D, d M Y H:i:s \\G\\M\\T', $sp4fd006)); if (isset($_SERVER['HTTP_IF_MODIFIED_SINCE']) && strtotime($_SERVER['HTTP_IF_MODIFIED_SINCE']) === $sp4fd006) { $this->halt(304); } } }