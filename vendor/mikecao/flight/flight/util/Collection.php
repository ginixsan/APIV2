<?php
namespace flight\util; class Collection implements \ArrayAccess, \Iterator, \Countable { private $data; public function __construct(array $sp0a1a6a = array()) { $this->data = $sp0a1a6a; } public function __get($spa6cb11) { return isset($this->data[$spa6cb11]) ? $this->data[$spa6cb11] : null; } public function __set($spa6cb11, $spc1f8c3) { $this->data[$spa6cb11] = $spc1f8c3; } public function __isset($spa6cb11) { return isset($this->data[$spa6cb11]); } public function __unset($spa6cb11) { unset($this->data[$spa6cb11]); } public function offsetGet($sp626d98) { return isset($this->data[$sp626d98]) ? $this->data[$sp626d98] : null; } public function offsetSet($sp626d98, $spc1f8c3) { if (is_null($sp626d98)) { $this->data[] = $spc1f8c3; } else { $this->data[$sp626d98] = $spc1f8c3; } } public function offsetExists($sp626d98) { return isset($this->data[$sp626d98]); } public function offsetUnset($sp626d98) { unset($this->data[$sp626d98]); } public function rewind() { reset($this->data); } public function current() { return current($this->data); } public function key() { return key($this->data); } public function next() { return next($this->data); } public function valid() { $spa6cb11 = key($this->data); return $spa6cb11 !== NULL && $spa6cb11 !== FALSE; } public function count() { return sizeof($this->data); } public function keys() { return array_keys($this->data); } public function getData() { return $this->data; } public function setData(array $sp0a1a6a) { $this->data = $sp0a1a6a; } public function clear() { $this->data = array(); } }