<?php
namespace flight\net; class Router { protected $routes = array(); protected $index = 0; public $case_sensitive = false; public function getRoutes() { return $this->routes; } public function clear() { $this->routes = array(); } public function map($sp07e4f9, $spfed79e, $sp30ce80 = false) { $sp00ca70 = $sp07e4f9; $sp1ca8e6 = array('*'); if (strpos($sp07e4f9, ' ') !== false) { list($sp70c3ee, $sp00ca70) = explode(' ', trim($sp07e4f9), 2); $sp1ca8e6 = explode('|', $sp70c3ee); } $this->routes[] = new Route($sp00ca70, $spfed79e, $sp1ca8e6, $sp30ce80); } public function route(Request $spc73b8e) { while ($spbea047 = $this->current()) { if ($spbea047 !== false && $spbea047->matchMethod($spc73b8e->method) && $spbea047->matchUrl($spc73b8e->url, $this->case_sensitive)) { return $spbea047; } $this->next(); } return false; } public function current() { return isset($this->routes[$this->index]) ? $this->routes[$this->index] : false; } public function next() { $this->index++; } public function reset() { $this->index = 0; } }